
error_log /proc/self/fd/0 debug;
access_log /proc/self/fd/0;

lua_shared_dict dogs 1m;

 init_by_lua_block {
     local dogs = ngx.shared.dogs;
     dogs:set("Tom", 56)

-- local ffi = require("ffi")
-- cjson = ffi.load("/usr/local/openresty/lualib/cjson.so")
-- grpc_rp = ffi.load("/usr/local/openresty/lualib/routeprinter.so")
 }


#              local dogs = ngx.shared.dogs;
#             ngx.say(dogs:get("Tom"))

 server {
     listen 8989;
     server_name localhost;
     location = /api {
         content_by_lua_block {

-- print('Using \"print\"');
-- ngx.log(ngx.NOTICE, 'Using \"ngx.NOTICE\"');
-- ngx.log(ngx.INFO, 'Using \"ngx.INFO\"')

local ffi = require("ffi")
ffi.cdef[[
  int printf(const char *fmt, ...);
  void RunServer();
  void _Z9RunServerv();
]]
grpc_rp = ffi.load("/usr/local/openresty/lualib/routeprinter.so")
cj = ffi.load("/usr/local/openresty/lualib/cjson.so")
-- for key,value in pairs(getmetatable(grpc_rp)) do
--    print(key)
-- end
-- "missing declaration for symbol 'Hello'
-- grpc_rp.Hello()

-- undefined Symbol RunServer (because c++ name mangling)
-- grpc_rp.RunServer()

print("before run server")
grpc_rp["_Z9RunServerv"]()
ngx.say(ffi.C.printf("Hello %s!", "world"))

         }
     }
 }